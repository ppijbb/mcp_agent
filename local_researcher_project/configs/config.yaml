# Local Researcher Configuration
# Production-level configuration for Local Researcher system

# Application Settings
app:
  name: "Local Researcher"
  version: "1.0.0"
  environment: "production"
  debug: false
  log_level: "INFO"
  max_concurrent_research: 5
  default_timeout: 300

# Output Settings
output:
  directory: "./outputs"
  formats:
    - "markdown"
    - "pdf"
    - "html"
  default_format: "markdown"
  auto_cleanup: true
  cleanup_after_days: 30

# Database Settings
database:
  type: "sqlite"  # sqlite, postgresql, mysql
  sqlite:
    path: "./data/local_researcher.db"
  postgresql:
    host: "localhost"
    port: 5432
    database: "local_researcher"
    username: "researcher"
    password: ""
  redis:
    host: "localhost"
    port: 6379
    database: 0
    password: ""

# Gemini CLI Integration
gemini_cli:
  enabled: true
  command_prefix: "gemini"
  interactive_mode: true
  auto_completion: true
  command_timeout: 60
  max_history: 1000

# Open Deep Research Integration
open_deep_research:
  enabled: true
  workflow_mode: "multi_agent"  # multi_agent, workflow
  model_provider: "google"  # openai, anthropic, google
  model_name: "gemini-2.5-flash-lite"
  max_iterations: 10
  timeout: 300
  search_tools:
    - "web_search"
    - "academic_search"
    - "news_search"
    - "arxiv_search"
    - "pubmed_search"
  agents:
    topic_analyzer:
      enabled: true
      model: "gemini-2.5-flash-lite"
      max_tokens: 2000
    source_discoverer:
      enabled: true
      model: "gemini-2.5-flash-lite"
      max_sources: 20
    content_gatherer:
      enabled: true
      model: "gemini-2.5-flash-lite"
      max_content_length: 10000
    content_analyzer:
      enabled: true
      model: "gemini-2.5-flash-lite"
      analysis_depth: "comprehensive"
    report_generator:
      enabled: true
      model: "gemini-2.5-flash-lite"
      report_structure: "standard"

# Research Workflow Settings
research:
  default_depth: "standard"  # basic, standard, comprehensive
  domains:
    technology:
      search_tools: ["web_search", "academic_search", "news_search"]
      agents: ["topic_analyzer", "source_discoverer", "content_gatherer", "content_analyzer", "report_generator"]
    science:
      search_tools: ["academic_search", "arxiv_search", "pubmed_search"]
      agents: ["topic_analyzer", "source_discoverer", "content_gatherer", "content_analyzer", "fact_checker", "report_generator"]
    business:
      search_tools: ["web_search", "news_search", "academic_search"]
      agents: ["topic_analyzer", "source_discoverer", "content_gatherer", "content_analyzer", "quality_assessor", "report_generator"]
    general:
      search_tools: ["web_search", "news_search"]
      agents: ["topic_analyzer", "source_discoverer", "content_gatherer", "content_analyzer", "report_generator"]

# Search Tools Configuration
search_tools:
  web_search:
    provider: "duckduckgo"  # duckduckgo, google, bing
    max_results: 10
    timeout: 30
  academic_search:
    provider: "arxiv"  # arxiv, pubmed, google_scholar
    max_results: 15
    timeout: 45
  news_search:
    provider: "newsapi"  # newsapi, gnews
    max_results: 10
    timeout: 30
  arxiv_search:
    max_results: 20
    categories: ["cs", "math", "physics"]
    timeout: 60
  pubmed_search:
    max_results: 15
    timeout: 60

# LLM Model Configuration
models:
  primary: "gemini-2.5-flash-lite"
  fallback: "gemini-2.0-flash-exp"
  provider: "google"
  max_tokens: 8192
  temperature: 0.7
  timeout: 60

# API Keys and Authentication
api_keys:
  openai:
    api_key: "${OPENAI_API_KEY}"
    organization: "${OPENAI_ORG_ID}"
  anthropic:
    api_key: "${ANTHROPIC_API_KEY}"
  google:
    api_key: "${GEMINI_API_KEY}"
    project_id: "${GOOGLE_PROJECT_ID}"
  newsapi:
    api_key: "${NEWSAPI_KEY}"
  tavily:
    api_key: "${TAVILY_API_KEY}"
  perplexity:
    api_key: "${PERPLEXITY_API_KEY}"

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "./logs/local_researcher.log"
  max_file_size: "10MB"
  backup_count: 5
  console_output: true

# Security Settings
security:
  encryption_enabled: true
  api_key_encryption: true
  data_encryption: true
  ssl_verify: true
  allowed_hosts:
    - "localhost"
    - "127.0.0.1"

# Performance Settings
performance:
  max_workers: 4
  cache_enabled: true
  cache_ttl: 3600
  memory_limit: "2GB"
  cpu_limit: 80

# Monitoring and Metrics
monitoring:
  enabled: true
  metrics_port: 9090
  health_check_interval: 30
  alerting:
    enabled: false
    webhook_url: ""
    email_notifications: false

# Backup and Recovery
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  compression: true
  encryption: true

# Development Settings (for development environment)
development:
  debug: true
  log_level: "DEBUG"
  mock_apis: false
  test_mode: false 